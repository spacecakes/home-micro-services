version: "3.9"

services:
  # Server tools

  traefik:
    container_name: traefik
    image: traefik:latest
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    ports:
      - "443:443"
      - "80:80"
    labels:
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    restart: always
    environment:
      - BASIC_AUTH_USERNAME=${BASIC_AUTH_USERNAME}
      - BASIC_AUTH_PASSWORD_HASH=${BASIC_AUTH_PASSWORD_HASH}
      - JOKER_API_MODE=SVC
      - JOKER_USERNAME=${JOKER_DDNS_USERNAME}
      - JOKER_PASSWORD=${JOKER_DDNS_PASSWORD}
    volumes:
      - /volume1/docker/traefik/letsencrypt:/letsencrypt
      - /volume1/docker/traefik/traefik.yml:/traefik.yml
      - /volume1/docker/traefik/config.yml:/config.yml
      - /var/run/docker.sock:/var/run/docker.sock

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    labels:
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    restart: always
    volumes:
      - /volume1/docker/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:latest
    restart: unless-stopped
    environment:
      - WATCHTOWER_CLEANUP=true
    labels:
      - "traefik.enable=false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  organizr:
    container_name: organizr
    image: organizr/organizr:latest
    hostname: organizr
    environment:
      - TZ=${TZ}
    labels:
      - "traefik.http.services.organizr.loadbalancer.server.port=80"
      - "traefik.http.routers.organizr.rule=Host(`app.gabriellundmark.com`)"
    restart: unless-stopped
    volumes:
      - /volume1/docker/organizr:/config

  nginx:
    container_name: nginx
    image: nginx
    labels:
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
      - "traefik.http.routers.nginx.rule=Host(`home.gabriellundmark.com`)"
    restart: unless-stopped
    volumes:
      - /volume1/web:/usr/share/nginx/html:ro

  ombi:
    container_name: ombi
    image: linuxserver/ombi:latest
    hostname: ombi
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=${TZ}
    restart: unless-stopped
    labels:
      - "traefik.http.services.ombi.loadbalancer.server.port=3579"
    volumes:
      - /volume1/docker/ombi:/config

  # Home automation
  homeassistant:
    container_name: homeassistant
    image: homeassistant/home-assistant:latest
    network_mode: host
    restart: unless-stopped
    labels:
      - "traefik.http.services.homeassistant.loadbalancer.server.port=8123"
    volumes:
      - /volume1/docker/homeassistant:/config
      - /volume1/music:/music
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0

  homebridge:
    container_name: homebridge
    hostname: homebridge
    image: oznu/homebridge:latest
    environment:
      - HOMEBRIDGE_CONFIG_UI=1
      - HOMEBRIDGE_CONFIG_UI_PORT=8581
      - TZ=${TZ}
    network_mode: host
    restart: unless-stopped
    labels:
      - "traefik.http.services.homebridge.loadbalancer.server.port=8581"
    volumes:
      - /volume1/docker/homebridge:/homebridge

  # Media servers
  roon:
    image: steefdebruijn/docker-roonserver:latest
    container_name: roon
    hostname: roon
    network_mode: host
    environment:
      TZ: "Europe/Stockholm"
    volumes:
      - /volume1/docker/roon/app:/app
      - /volume1/docker/roon/data:/data
      - /volume1/docker/roon/backup:/backup
      - /volume1/music:/music
    restart: unless-stopped
    labels:
      - "traefik.http.services.roon.loadbalancer.server.port=9330"
      - "traefik.http.middlewares.roon.addprefix.prefix=/display"

  plex:
    container_name: plex
    image: plexinc/pms-docker
    hostname: plex
    network_mode: host
    environment:
      - TZ="Europe/Stockholm"
      - PLEX_CLAIM="${PLEX_CLAIM}"
      - ADVERTISE_IP="http://10.0.1.2:32400/""
      - PLEX_GID=${GID}
      - PLEX_UID=${UID}
    labels:
      - "traefik.http.services.plex.loadbalancer.server.port=32400"

    restart: unless-stopped
    volumes:
      - /volume1/docker/plex:/config
      - /volume1/media:/media
      - "/volume1/home video:/home video"
      - /volume1/music:/music
      - /volume1/video:/video
      - /volume1/transcode/plex:/transcode

  # Downloaders
  sabnzbd:
    container_name: sabnzbd
    image: linuxserver/sabnzbd:latest
    hostname: sabnzbd
    environment:
      - TZ=${TZ}
      - PGID=${GID}
      - PUID=${UID}
    labels:
      - "traefik.http.services.sabnzbd.loadbalancer.server.port=8080"
    restart: always
    volumes:
      - /volume1/docker/sabnzbd:/config
      - /volume1/downloads:/downloads
      - /volume1/media:/media

  transmission:
    container_name: transmission
    image: piec/transmission-magnet:latest
    hostname: transmission
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=${TZ}
    labels:
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"
    ports:
      - "51413:51413"
      - "51413:51413/udp"
    restart: unless-stopped
    volumes:
      - /volume1/downloads:/downloads
      - /volume1/media:/media
      - /volume1/downloads:/watch
      - /volume1/docker/transmission:/config
      - /volume1/seeding:/seeding

  # Media management
  handbrake:
    container_name: handbrake
    image: jlesage/handbrake
    environment:
      - GROUP_ID=${GID}
      - USER_ID=${UID}
      - TZ=${TZ}
      - AUTOMATED_CONVERSION_KEEP_SOURCE=0
    labels:
      - "traefik.http.services.handbrake.loadbalancer.server.port=5800"
    volumes:
      - "/volume1/docker/handbrake:/config:rw"
      - "/volume1/media:/storage:ro"
      - "/volume1/transcode/watch:/watch:rw"
      - "/volume1/transcode/output:/output:rw"

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    hostname: sonarr
    environment:
      - TZ=${TZ}
      - PGID=${GID}
      - PUID=${UID}
    labels:
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    restart: unless-stopped
    volumes:
      - /volume1/docker/sonarr:/config
      - /volume1/downloads:/downloads
      - /volume1/media:/media

  prowlarr:
    container_name: prowlarr
    image: linuxserver/prowlarr:develop
    hostname: prowlarr
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=${TZ}
    labels:
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
    restart: unless-stopped
    volumes:
      - /volume1/docker/prowlarr:/config

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    hostname: radarr
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=${TZ}
    labels:
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    restart: unless-stopped
    volumes:
      - /volume1/docker/radarr:/config
      - /volume1/downloads:/downloads
      - /volume1/media:/media

  readarr:
    container_name: readarr
    image: linuxserver/readarr:develop
    hostname: readarr
    environment:
      - TZ=${TZ}
      - PGID=${GID}
      - PUID=${UID}
    labels:
      - "traefik.http.services.readarr.loadbalancer.server.port=8787"
    restart: unless-stopped
    volumes:
      - /volume1/docker/readarr:/config
      - /volume1/downloads:/downloads
      - /volume1/media:/media

  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr:latest
    hostname: bazarr
    environment:
      - TZ=${TZ}
      - PGID=${GID}
      - PUID=${UID}
    labels:
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
    restart: unless-stopped
    volumes:
      - /volume1/docker/bazarr:/config
      - /volume1/media:/media

  nzbhydra:
    container_name: nzbhydra
    image: linuxserver/nzbhydra2:latest
    hostname: nzbhydra
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=${TZ}
    labels:
      - "traefik.http.services.nzbhydra.loadbalancer.server.port=5076"
    restart: unless-stopped
    volumes:
      - /volume1/docker/nzbhydra:/config
      - /volume1/downloads:/downloads
      - /volume1/media:/media

  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    hostname: jackett
    environment:
      - TZ=${TZ}
    labels:
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"
    restart: unless-stopped
    volumes:
      - /volume1/docker/jackett:/config
