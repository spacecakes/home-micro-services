version: "3.9"
services:
  # Server tools
  traefik:
    container_name: traefik
    image: traefik:latest
    ports:
      - "444:443"
      - "81:80"
      - "8080:8080"
    labels:
      traefik.http.routers.traefik.rule: Host(`traefik.${DOMAIN_NAME}`)
      traefik.http.services.traefik.loadbalancer.server.port: 8080
    restart: always
    volumes:
      - /volume1/docker/traefik/traefik.yml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:latest
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  organizr:
    container_name: organizr
    image: organizr/organizr:latest
    hostname: organizr
    environment:
      - TZ=Europe/Stockholm
    labels:
      traefik.http.routers.organizr.rule: Host(`organizr.${DOMAIN_NAME}`)
      traefik.http.services.organizr.loadbalancer.server.port: 80
    ports:
      - "100:80"
    restart: always
    volumes:
      - /volume1/docker/organizr:/config

  # Home automation
  homeassistant:
    container_name: homeassistant
    image: homeassistant/home-assistant:latest
    hostname: homeassistant
    labels:
      traefik.http.routers.homeassistant.rule: Host(`homeassistant.${DOMAIN_NAME}`)
      traefik.http.services.homeassistant.loadbalancer.server.port: 8123
    network_mode: host
    restart: unless-stopped
    volumes:
      - /volume1/docker/homeassistant:/config

  homebridge:
    container_name: homebridge
    hostname: homebridge
    image: oznu/homebridge:latest
    environment:
      - HOMEBRIDGE_CONFIG_UI=1
      - HOMEBRIDGE_CONFIG_UI_PORT=8581
      - TZ=Europe/Stockholm
    labels:
      traefik.http.routers.homebridge.rule: Host(`homebridge.${DOMAIN_NAME}`)
      traefik.http.services.homebridge.loadbalancer.server.port: 8581
    network_mode: host
    restart: unless-stopped
    volumes:
      - /volume1/docker/homebridge:/homebridge

  # Media servers
  plex:
    container_name: plex
    image: plexinc/pms-docker
    hostname: plex
    ports:
      - "32400:32400/tcp"
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "32469:32469/tcp"
      #- "1900:1900/udp"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
    environment:
      - TZ=Europe/Stockholm
      - PLEX_CLAIM=claim-fvy-V1NtmeMssz53nvya
      - ADVERTISE_IP=http://10.0.1.2:32400/
      - PLEX_GID=${GID}
      - PLEX_UID=${UID}
    labels:
      traefik.http.routers.plex.rule: Host(`plex.${DOMAIN_NAME}`)
      traefik.http.services.plex.loadbalancer.server.port: 32400
    restart: unless-stopped
    volumes:
      - /volume1/docker/plex/config:/config
      - /volume1/docker/plex/transcode:/transcode
      - /volume1/media:/media
      - "/volume1/home video:/home video"
      - /volume1/music:/music
      - /volume1/video:/video

  # Downloaders
  sabnzbd:
    container_name: sabnzbd
    image: linuxserver/sabnzbd:latest
    hostname: sabnzbd
    environment:
      - TZ=Europe/Stockholm
      - PGID=${GID}
      - PUID=${UID}
    labels:
      traefik.http.routers.sabnzbd.rule: Host(`sabnzbd.${DOMAIN_NAME}`)
      traefik.http.services.sabnzbd.loadbalancer.server.port: 8080
    ports:
      - "8085:8080/tcp"
      - "9090:9090/tcp"
    restart: always
    volumes:
      - /volume1/docker/sabnzbd:/config
      - /volume1/downloads:/downloads
      - /volume1/media:/media

  transmission:
    container_name: transmission
    image: piec/transmission-magnet:latest
    hostname: transmission
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=Europe/Stockholm
    labels:
      traefik.http.routers.transmission.rule: Host(`transmission.${DOMAIN_NAME}`)
      traefik.http.services.transmission.loadbalancer.server.port: 9091
    ports:
      - "9091:9091"
      - "51413:51413"
      - "51413:51413/udp"
    restart: unless-stopped
    volumes:
      - /volume1/media/downloads:/downloads
      - /volume1/downloads:/watch
      - /volume1/docker/transmission:/config

  # Media management
  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    hostname: sonarr
    environment:
      - TZ=Europe/Stockholm
      - PGID=${GID}
      - PUID=${UID}
    labels:
      traefik.http.routers.sonarr.rule: Host(`sonarr.${DOMAIN_NAME}`)
      traefik.http.services.sonarr.loadbalancer.server.port: 8989
    ports:
      - "8989:8989/tcp"
    restart: unless-stopped
    volumes:
      - /volume1/docker/sonarr:/config
      - /volume1/downloads:/downloads
      - /volume1/media:/media

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    hostname: radarr
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=Europe/Stockholm
    labels:
      traefik.http.routers.radarr.rule: Host(`radarr.${DOMAIN_NAME}`)
      traefik.http.services.radarr.loadbalancer.server.port: 7878
    ports:
      - "7878:7878/tcp"
    restart: unless-stopped
    volumes:
      - /volume1/docker/radarr:/config
      - /volume1/downloads:/downloads
      - /volume1/media:/media

  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr:latest
    hostname: bazarr
    environment:
      - TZ=Europe/Stockholm
      - PGID=${GID}
      - PUID=${UID}
    labels:
      traefik.http.routers.bazarr.rule: Host(`bazarr.${DOMAIN_NAME}`)
      traefik.http.services.bazarr.loadbalancer.server.port: 6767
    ports:
      - "6767:6767/tcp"
    restart: unless-stopped
    volumes:
      - /volume1/docker/bazarr:/config
      - /volume1/media:/media

  nzbhydra:
    container_name: nzbhydra
    image: linuxserver/nzbhydra2:latest
    hostname: nzbhydra
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=Europe/Stockholm
    labels:
      traefik.http.routers.nzbhydra.rule: Host(`nzbhydra.${DOMAIN_NAME}`)
      traefik.http.services.nzbhydra.loadbalancer.server.port: 5076
    ports:
      - "5076:5076/tcp"
    restart: unless-stopped
    volumes:
      - /volume1/docker/nzbhydra:/config
      - /volume1/downloads:/downloads
      - /volume1/media:/media

  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    hostname: jackett
    environment:
      - TZ=Europe/Stockholm
    labels:
      traefik.http.routers.jackett.rule: Host(`jackett.${DOMAIN_NAME}`)
      traefik.http.services.jackett.loadbalancer.server.port: 9117
    ports:
      - "9117:9117/tcp"
    restart: unless-stopped
    volumes:
      - /volume1/docker/jackett:/config
