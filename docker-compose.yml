services:
  # Server tools
  traefik:
    container_name: traefik
    image: traefik:3.3.3
    extra_hosts:
      - 'host.docker.internal:172.17.0.1'
    ports:
      - '443:443'
      - '80:80'
      - '8080:8080'
    labels:
      - 'traefik.http.services.traefik.loadbalancer.server.port=8080'
      - 'com.centurylinklabs.watchtower.enable=false'
    restart: always
    environment:
      - BASIC_AUTH_USERNAME=${BASIC_AUTH_USERNAME}
      - BASIC_AUTH_PASSWORD_HASH=${BASIC_AUTH_PASSWORD_HASH}
      - JOKER_API_MODE=SVC
      - JOKER_USERNAME=${JOKER_DDNS_USERNAME}
      - JOKER_PASSWORD=${JOKER_DDNS_PASSWORD}
    volumes:
      - ${DOCKER_PATH}/data/traefik/letsencrypt:/letsencrypt
      - ${DOCKER_PATH}/compose/traefik/traefik.yml:/traefik.yml
      - ${DOCKER_PATH}/compose/traefik/dynamic.yml:/dynamic.yml
      - /var/run/docker.sock:/var/run/docker.sock

  traefik-certs-dumper:
    image: ldez/traefik-certs-dumper:v2.9.3
    entrypoint: sh -c '
      while ! [ -e /data/acme.json ]
      || ! [ `jq ".[] | .Certificates | length" /data/acme.json | jq -s "add" ` != 0 ]; do
      sleep 1
      ; done
      && traefik-certs-dumper file --version v2 --watch
      --source /data/acme.json --dest /data/certs'
    volumes:
      - ${DOCKER_PATH}/data/traefik/letsencrypt:/data
    network_mode: 'none'

  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    container_name: dockerproxy
    environment:
      - CONTAINERS=1
      - SERVICES=1
      - TASKS=1
      - POST=0
    ports:
      - 127.0.0.1:2375:2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped

  portainer:
    ports:
      - '9000:9000'
    container_name: portainer
    image: portainer/portainer-ce:latest
    labels:
      - 'traefik.http.services.portainer.loadbalancer.server.port=9000'
    restart: always
    volumes:
      - ${DOCKER_PATH}/data/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - traefik

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:latest
    restart: 'unless-stopped'
    environment:
      - WATCHTOWER_CLEANUP=true
    labels:
      - 'traefik.enable=false'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    restart: unless-stopped
    environment:
      PGID: ${GID}
      PUID: ${UID}
      HOMEPAGE_ALLOWED_HOSTS: 'app.gabriellundmark.com'
    labels:
      - 'traefik.http.services.homepage.loadbalancer.server.port=3000'
      - 'traefik.http.routers.homepage.rule=Host(`app.gabriellundmark.com`)'
    volumes:
      - ${DOCKER_PATH}/data/homepage/config:/config
      - ${DOCKER_PATH}/data/homepage/images:/app/public/images
      - ${DOCKER_PATH}/data/homepage/icons:/app/public/icons
    depends_on:
      - traefik
      - dockerproxy

  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    environment:
      - TZ=${TZ}
    labels:
      - 'traefik.http.services.overseerr.loadbalancer.server.port=5055'
    volumes:
      - ${DOCKER_PATH}/data/overseerr/config:/app/config
    restart: unless-stopped
    depends_on:
      - traefik
      - sonarr
      - radarr

  adguardhome:
    container_name: adguardhome
    image: adguard/adguardhome
    network_mode: host
    labels:
      - 'traefik.http.services.adguardhome.loadbalancer.server.port=3000'
    volumes:
      - ${DOCKER_PATH}/data/adguardhome/work:/opt/adguardhome/work
      - ${DOCKER_PATH}/data/adguardhome/config:/opt/adguardhome/conf
    restart: unless-stopped
    depends_on:
      - traefik

  icloudpd:
    image: icloudpd/icloudpd:latest
    container_name: icloudpd
    environment:
      - UID=${UID}
      - GID=${GID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_PATH}/data/icloudpd:/config
      - ${MOUNTS_PATH}/photos/icloud:/data
    restart: 'unless-stopped'
    command:
      - icloudpd
      - --directory
      - /data
      - --cookie-directory
      - /config
      - --username
      - ${APPLE_ID}
      - --password-provider
      - webui
      - --mfa-provider
      - webui
      - --watch-with-interval
      - '3600'
      - --auto-delete

  icloudpd-shared:
    image: icloudpd/icloudpd:latest
    container_name: icloudpd-shared
    environment:
      - UID=${UID}
      - GID=${GID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_PATH}/data/icloudpd-shared:/config
      - ${MOUNTS_PATH}/photos/icloud-shared:/data
    restart: 'unless-stopped'
    command:
      - icloudpd
      - --directory
      - /data
      - --cookie-directory
      - /config
      - --username
      - ${APPLE_ID}
      - --password-provider
      - webui
      - --mfa-provider
      - webui
      - --watch-with-interval
      - '3600'
      - --auto-delete
      - --library
      - ${ICLOUD_SHARED_LIBRARY}

  # Home automation
  homeassistant:
    container_name: homeassistant
    image: homeassistant/home-assistant:latest
    network_mode: host
    restart: unless-stopped
    labels:
      - 'traefik.http.services.homeassistant.loadbalancer.server.port=8123'
      - 'com.centurylinklabs.watchtower.enable=false'
    volumes:
      - ${DOCKER_PATH}/data/homeassistant:/config
      - ${MOUNTS_PATH}/music:/music
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    depends_on:
      - traefik

  homebridge:
    container_name: homebridge
    hostname: homebridge
    image: homebridge/homebridge:latest
    environment:
      - TZ=${TZ}
    network_mode: host
    restart: unless-stopped
    labels:
      - 'traefik.http.services.homebridge.loadbalancer.server.port=8581'
    volumes:
      - ${DOCKER_PATH}/data/homebridge:/homebridge

  scrypted:
    container_name: scrypted
    image: koush/scrypted:latest
    network_mode: host
    restart: unless-stopped
    labels:
      - 'traefik.http.services.scrypted.loadbalancer.server.port=11080' # Use insecure port; Traefik handles SSL
    volumes:
      - ${DOCKER_PATH}/data/scrypted:/server/volume
    depends_on:
      - traefik

  # Media servers
  plex:
    container_name: plex
    image: linuxserver/plex
    hostname: plex
    network_mode: host
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ="Europe/Stockholm"
      # To reclaim, visit https://www.plex.tv/claim/ to get a new token
      # then set it in your .env file and restart the container within 4 minutes.
      - PLEX_CLAIM="${PLEX_CLAIM}"
    devices:
      - /dev/dri:/dev/dri # Intel Quick Sync
    labels:
      - 'traefik.http.services.plex.loadbalancer.server.port=32400'
    restart: unless-stopped
    volumes:
      - ${DOCKER_PATH}/data/plex:/config
      - ${DOCKER_PATH}/temp/plex:/transcode
      - ${MOUNTS_PATH}/media:/media
      - ${MOUNTS_PATH}/home_video:/home_video
      - ${MOUNTS_PATH}/music:/music
      - ${MOUNTS_PATH}/video:/video
    depends_on:
      - traefik

  sabnzbd:
    container_name: sabnzbd
    image: linuxserver/sabnzbd:latest
    hostname: sabnzbd
    environment:
      - TZ=${TZ}
      - PGID=${GID}
      - PUID=${UID}
    labels:
      - 'traefik.http.services.sabnzbd.loadbalancer.server.port=8080'
    restart: always
    volumes:
      - ${DOCKER_PATH}/data/sabnzbd:/config
      - ${DOCKER_PATH}/downloads:/downloads
      - ${MOUNTS_PATH}/downloads:/downloads-nas
      - ${MOUNTS_PATH}/media:/media
    depends_on:
      - traefik

  transmission:
    container_name: transmission
    image: piec/transmission-magnet:latest
    hostname: transmission
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=${TZ}
    labels:
      - 'traefik.http.services.transmission.loadbalancer.server.port=9091'
    ports:
      - '51413:51413'
      - '51413:51413/udp'
    restart: unless-stopped
    volumes:
      - ${DOCKER_PATH}/data/transmission:/config
      - ${DOCKER_PATH}/downloads:/downloads
      - ${MOUNTS_PATH}/downloads:/downloads-nas
      - ${MOUNTS_PATH}/downloads/seeding:/seeding
    depends_on:
      - traefik

  handbrake:
    container_name: handbrake
    image: jlesage/handbrake
    restart: 'no'
    environment:
      - GROUP_ID=${GID}
      - USER_ID=${UID}
      - TZ=${TZ}
      - AUTOMATED_CONVERSION_KEEP_SOURCE=0
    labels:
      - 'traefik.http.services.handbrake.loadbalancer.server.port=5800'
    volumes:
      - '${DOCKER_PATH}/data/handbrake:/config:rw'
      - '${DOCKER_PATH}/temp/handbrake/watch:/watch:rw'
      - '${DOCKER_PATH}/temp/handbrake/output:/output:rw'
      - '${MOUNTS_PATH}/media:/storage:ro'
    depends_on:
      - traefik

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    hostname: sonarr
    environment:
      - TZ=${TZ}
      - PGID=${GID}
      - PUID=${UID}
    labels:
      - 'traefik.http.services.sonarr.loadbalancer.server.port=8989'
    restart: unless-stopped
    volumes:
      - ${DOCKER_PATH}/data/sonarr:/config
      - ${DOCKER_PATH}/downloads:/downloads
      - ${MOUNTS_PATH}/media:/media
    depends_on:
      - traefik
      - prowlarr
      - nzbhydra
      - sabnzbd
      - transmission

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    hostname: radarr
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=${TZ}
    labels:
      - 'traefik.http.services.radarr.loadbalancer.server.port=7878'
    restart: unless-stopped
    volumes:
      - ${DOCKER_PATH}/data/radarr:/config
      - ${DOCKER_PATH}/downloads:/downloads
      - ${MOUNTS_PATH}/media:/media
    depends_on:
      - traefik
      - prowlarr
      - nzbhydra
      - sabnzbd
      - transmission

  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr:latest
    hostname: bazarr
    environment:
      - TZ=${TZ}
      - PGID=${GID}
      - PUID=${UID}
    labels:
      - 'traefik.http.services.bazarr.loadbalancer.server.port=6767'
    restart: unless-stopped
    volumes:
      - ${DOCKER_PATH}/data/bazarr:/config
      - ${MOUNTS_PATH}/media:/media
    depends_on:
      - traefik

  nzbhydra:
    container_name: nzbhydra
    image: linuxserver/nzbhydra2:latest
    hostname: nzbhydra
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=${TZ}
    labels:
      - 'traefik.http.services.nzbhydra.loadbalancer.server.port=5076'
    restart: unless-stopped
    volumes:
      - ${DOCKER_PATH}/data/nzbhydra:/config
      - ${DOCKER_PATH}/downloads:/downloads
      - ${MOUNTS_PATH}/downloads:/downloads-nas
      - ${MOUNTS_PATH}/media:/media
    depends_on:
      - traefik

  prowlarr:
    container_name: prowlarr
    image: linuxserver/prowlarr:develop
    hostname: prowlarr
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=${TZ}
    labels:
      - 'traefik.http.services.prowlarr.loadbalancer.server.port=9696'
    restart: unless-stopped
    volumes:
      - ${DOCKER_PATH}/data/prowlarr:/config
    depends_on:
      - traefik
