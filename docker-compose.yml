version: "3.9"

services:
  # Server tools

  traefik:
    container_name: traefik
    image: traefik:latest
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    ports:
      - "443:443"
      - "80:80"
    labels:
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    restart: always
    environment:
      - TRAEFIK_CERTIFICATESRESOLVERS_MYRESOLVER_ACME_EMAIL=${EMAIL}
      - TRAEFIK_PILOT_TOKEN=${TRAEFIK_PILOT_TOKEN}
      - DOMAIN_NAME_APPS=${DOMAIN_NAME_APPS}
      - DOMAIN_NAME_HOME=${DOMAIN_NAME_HOME}
      - AUTH_USERNAME=${AUTH_USERNAME}
      - AUTH_PASSWORD_HASH=${AUTH_PASSWORD_HASH}
    volumes:
      - /volume1/docker/traefik/letsencrypt:/letsencrypt
      - /volume1/docker/traefik/traefik.yml:/traefik.yml
      - /volume1/docker/traefik/config.yml:/config.yml
      - /var/run/docker.sock:/var/run/docker.sock

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    labels:
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    restart: always
    volumes:
      - /volume1/docker/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:latest
    restart: always
    labels:
      - "traefik.enable=false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  organizr:
    container_name: organizr
    image: organizr/organizr:latest
    hostname: organizr
    environment:
      - TZ=${TZ}
    labels:
      - "traefik.http.services.organizr.loadbalancer.server.port=80"
      - "traefik.http.routers.organizr.rule=Host(`${DOMAIN_NAME_APPS}`)"
    restart: always
    volumes:
      - /volume1/docker/organizr:/config

  nginx:
    container_name: nginx
    image: nginx
    labels:
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
      - "traefik.http.routers.nginx.rule=Host(`${DOMAIN_NAME_HOME}`)"
    restart: always
    volumes:
      - /volume1/docker/nginx:/usr/share/nginx/html:ro

  ombi:
    container_name: ombi
    image: linuxserver/ombi:latest
    hostname: ombi
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=${TZ}
    restart: unless-stopped
    labels:
      - "traefik.http.services.ombi.loadbalancer.server.port=3579"
    volumes:
      - /volume1/docker/ombi:/config

  # Home automation
  homeassistant:
    container_name: homeassistant
    image: homeassistant/home-assistant:latest
    network_mode: host
    restart: unless-stopped
    labels:
      - "traefik.http.services.homeassistant.loadbalancer.server.port=8123"
    volumes:
      - /volume1/docker/homeassistant:/config

  homebridge:
    container_name: homebridge
    hostname: homebridge
    image: oznu/homebridge:latest
    environment:
      - HOMEBRIDGE_CONFIG_UI=1
      - HOMEBRIDGE_CONFIG_UI_PORT=8581
      - TZ=${TZ}
    network_mode: host
    restart: unless-stopped
    labels:
      - "traefik.http.services.homebridge.loadbalancer.server.port=8581"
    volumes:
      - /volume1/docker/homebridge:/homebridge

  # Media servers
  plex:
    container_name: plex
    image: plexinc/pms-docker
    hostname: plex
    ports:
      - "32400:32400/tcp"
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "32469:32469/tcp"
      #- "1900:1900/udp"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
    environment:
      - TZ="Europe/Stockholm"
      - PLEX_CLAIM="claim-fvy-V1NtmeMssz53nvya"
      - ADVERTISE_IP="http://10.0.1.2:32400/""
      - PLEX_GID=${GID}
      - PLEX_UID=${UID}
    labels:
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
    restart: unless-stopped
    volumes:
      - /volume1/docker/plex/config:/config
      - /volume1/docker/plex/transcode:/transcode
      - /volume1/media:/media
      - "/volume1/home video:/home video"
      - /volume1/music:/music
      - /volume1/video:/video

  # Downloaders
  sabnzbd:
    container_name: sabnzbd
    image: linuxserver/sabnzbd:latest
    hostname: sabnzbd
    environment:
      - TZ=${TZ}
      - PGID=${GID}
      - PUID=${UID}
    labels:
      - "traefik.http.services.sabnzbd.loadbalancer.server.port=8080"
    restart: always
    volumes:
      - /volume1/docker/sabnzbd:/config
      - /volume1/downloads:/downloads
      - /volume1/media:/media

  transmission:
    container_name: transmission
    image: piec/transmission-magnet:latest
    hostname: transmission
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=${TZ}
    labels:
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"
    ports:
      - "51413:51413"
      - "51413:51413/udp"
    restart: unless-stopped
    volumes:
      - /volume1/media/downloads:/downloads
      - /volume1/downloads:/watch
      - /volume1/docker/transmission:/config

  transmission-seeder:
    container_name: transmission-seeder
    image: piec/transmission-magnet:latest
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=${TZ}
    labels:
      - "traefik.http.services.transmission-seeder.loadbalancer.server.port=9091"
    ports:
      - "51414:51414"
      - "51414:51414/udp"
    restart: unless-stopped
    volumes:
      - /volume1/seeding:/downloads
      - /volume1/seeding:/watch
      - /volume1/docker/transmission-seeder:/config

  # Media management
  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    hostname: sonarr
    environment:
      - TZ=${TZ}
      - PGID=${GID}
      - PUID=${UID}
    labels:
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    restart: unless-stopped
    volumes:
      - /volume1/docker/sonarr:/config
      - /volume1/downloads:/downloads
      - /volume1/media:/media

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    hostname: radarr
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=${TZ}
    labels:
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    restart: unless-stopped
    volumes:
      - /volume1/docker/radarr:/config
      - /volume1/downloads:/downloads
      - /volume1/media:/media

  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr:latest
    hostname: bazarr
    environment:
      - TZ=${TZ}
      - PGID=${GID}
      - PUID=${UID}
    labels:
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
    restart: unless-stopped
    volumes:
      - /volume1/docker/bazarr:/config
      - /volume1/media:/media

  nzbhydra:
    container_name: nzbhydra
    image: linuxserver/nzbhydra2:latest
    hostname: nzbhydra
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=${TZ}
    labels:
      - "traefik.http.services.nzbhydra.loadbalancer.server.port=5076"
    restart: unless-stopped
    volumes:
      - /volume1/docker/nzbhydra:/config
      - /volume1/downloads:/downloads
      - /volume1/media:/media

  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    hostname: jackett
    environment:
      - TZ=${TZ}
    labels:
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"
    restart: unless-stopped
    volumes:
      - /volume1/docker/jackett:/config
